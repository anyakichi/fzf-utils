#!/bin/bash

set -o pipefail

# shellcheck source=./_fzf-state
. "${0%/*}/_fzf-state"

CMD="$1"
shift

case "$CMD" in
list)
    declare -A ls_colors=([di]=0 [ex]=0)

    IFS=':' read -ra args <<<"${LS_COLORS:-}"
    for i in "${args[@]}"; do
        IFS='=' read -r k v <<<"$i"
        ls_colors[$k]="$v"
    done

    args=()
    if [[ ${S[all]} == true ]]; then
        args+=(-a)
    else
        args+=(-s)
    fi

    tmux list-panes "${args[@]}" "$@" \
        -F "#S:#I.#P #{?#{&&:#W,#{!=:#W,#{pane_current_command}}},[#W] ,}\\#{pane_current_command}\\ \\#{pane_current_path}\\" |
        grep -v "^$(tmux list-panes -t "$TMUX_PANE" -F '#S:#I.#P')" |
        sed -e "s#$HOME#~#" \
            -e "s/\\\\\\([^\\]*\\)\\\\/\x1b[${ls_colors[ex]}m\\1\x1b[0m/" \
            -e "s/\\\\\\([^\\]*\\)\\\\/\x1b[${ls_colors[di]}m\\1\x1b[0m/"
    true
    ;;
view)
    tmux capture-pane -t "$1" -ep | less -KMRc
    ;;
run)
    fzf_args=()
    while ((${#@} > 0)); do
        if [[ $1 == "--" ]]; then
            shift
            break
        fi
        fzf_args+=("$1")
        shift
    done

    S[all]=true

    "$0" list |
        fzf --ansi --no-multi \
            --header ":: C-r: reload; C-d: toggle all" \
            --bind "ctrl-r:reload('$0' list)" \
            --bind "ctrl-s:reload('$0' toggle-all && '$0' list)" \
            --bind "ctrl-t:execute(tview '$0' view {1})" \
            --preview "'$0' view {1} | head -500" \
            "${fzf_args[@]}" |
        awk '{print $1}'
    ;;
toggle-all)
    if [[ ${S[all]} == true ]]; then
        S[all]="false"
    else
        S[all]="true"
    fi
    ;;
esac
